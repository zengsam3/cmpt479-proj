1:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:45:1817:2 |==> 0
2:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:45:1817:2 |==> -2
3:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:48:1920:1 |==> 0
4:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:48:1920:1 |==> -1
5:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction:51:2024:0 |==> 1
6:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction:51:2024:0 |==> -1
7:LVR:NEG:0:org.apache.commons.math3.fraction.BigFraction:54:2138:-1 |==> 0
8:LVR:NEG:POS:org.apache.commons.math3.fraction.BigFraction:54:2138:-1 |==> 1
9:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:57:2252:4 |==> 0
10:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:57:2252:4 |==> -4
11:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:57:2255:5 |==> 0
12:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:57:2255:5 |==> -5
13:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:60:2366:1 |==> 0
14:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:60:2366:1 |==> -1
15:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:60:2369:5 |==> 0
16:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:60:2369:5 |==> -5
17:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:63:2479:1 |==> 0
18:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:63:2479:1 |==> -1
19:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:63:2482:2 |==> 0
20:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:63:2482:2 |==> -2
21:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:66:2595:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:66:2595:1 |==> -1
23:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:66:2598:4 |==> 0
24:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:66:2598:4 |==> -4
25:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:69:2709:1 |==> 0
26:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:69:2709:1 |==> -1
27:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:69:2712:3 |==> 0
28:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:69:2712:3 |==> -3
29:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:72:2826:3 |==> 0
30:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:72:2826:3 |==> -3
31:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:72:2829:5 |==> 0
32:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:72:2829:5 |==> -5
33:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:75:2945:3 |==> 0
34:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:75:2945:3 |==> -3
35:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:75:2948:4 |==> 0
36:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:75:2948:4 |==> -4
37:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:78:3060:2 |==> 0
38:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:78:3060:2 |==> -2
39:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:78:3063:5 |==> 0
40:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:78:3063:5 |==> -5
41:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:81:3177:2 |==> 0
42:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:81:3177:2 |==> -2
43:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:81:3180:4 |==> 0
44:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:81:3180:4 |==> -4
45:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:84:3292:2 |==> 0
46:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:84:3292:2 |==> -2
47:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:84:3295:3 |==> 0
48:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:84:3295:3 |==> -3
49:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction:90:3544:100 |==> 0
50:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction:90:3544:100 |==> -100
51:STD:<CALL>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):121:4469:MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR); |==> <NO-OP>
52:STD:<CALL>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):122:4534:MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR); |==> <NO-OP>
53:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):123:4627:BigInteger.ZERO.equals(den) |==> false
54:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):123:4627:BigInteger.ZERO.equals(den) |==> true
55:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):126:4752:BigInteger.ZERO.equals(num) |==> false
56:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):126:4752:BigInteger.ZERO.equals(num) |==> true
57:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):133:5040:0 |==> 1
58:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):133:5040:0 |==> -1
59:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):133:5008:BigInteger.ONE.compareTo(gcd) < 0 |==> BigInteger.ONE.compareTo(gcd) != 0
60:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):133:5008:BigInteger.ONE.compareTo(gcd) < 0 |==> BigInteger.ONE.compareTo(gcd) <= 0
61:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):133:5038:BigInteger.ONE.compareTo(gcd) < 0 |==> false
62:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):134:5061:num = num.divide(gcd); |==> <NO-OP>
63:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):135:5100:den = den.divide(gcd); |==> <NO-OP>
64:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):139:5225:0 |==> 1
65:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):139:5225:0 |==> -1
66:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):139:5192:BigInteger.ZERO.compareTo(den) > 0 |==> BigInteger.ZERO.compareTo(den) != 0
67:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):139:5192:BigInteger.ZERO.compareTo(den) > 0 |==> BigInteger.ZERO.compareTo(den) >= 0
68:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):139:5223:BigInteger.ZERO.compareTo(den) > 0 |==> false
69:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):140:5246:num = num.negate(); |==> <NO-OP>
70:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(java.math.BigInteger,java.math.BigInteger):141:5282:den = den.negate(); |==> <NO-OP>
71:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@<init>(double):173:6630:Double.isNaN(value) |==> false
72:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@<init>(double):173:6630:Double.isNaN(value) |==> true
73:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@<init>(double):176:6771:Double.isInfinite(value) |==> false
74:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@<init>(double):176:6771:Double.isInfinite(value) |==> true
75:LVR:NEG:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):182:7041:-9223372036854775808L |==> 0L
76:LOR:&(long,long):^(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):182:7034:bits & -9223372036854775808L |==> bits ^ -9223372036854775808L
77:LOR:&(long,long):|(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):182:7034:bits & -9223372036854775808L |==> bits | -9223372036854775808L
78:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):183:7099:9218868437227405312L |==> 0L
79:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):183:7099:9218868437227405312L |==> -9218868437227405312L
80:LOR:&(long,long):^(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):183:7092:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
81:LOR:&(long,long):|(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):183:7092:bits & 9218868437227405312L |==> bits | 9218868437227405312L
82:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):184:7157:4503599627370495L |==> 0L
83:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):184:7157:4503599627370495L |==> -4503599627370495L
84:LOR:&(long,long):^(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):184:7150:bits & 4503599627370495L |==> bits ^ 4503599627370495L
85:LOR:&(long,long):|(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):184:7150:bits & 4503599627370495L |==> bits | 4503599627370495L
86:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double):185:7202:0 |==> 1
87:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):185:7202:0 |==> -1
88:ROR:!=(long,long):<(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):185:7190:exponent != 0 |==> exponent < 0
89:ROR:!=(long,long):>(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):185:7190:exponent != 0 |==> exponent > 0
90:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):185:7199:exponent != 0 |==> true
91:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):187:7307:4503599627370496L |==> 0L
92:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):187:7307:4503599627370496L |==> -4503599627370496L
93:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double):187:7302:m |= 4503599627370496L; |==> <NO-OP>
94:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double):189:7358:0 |==> 1
95:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):189:7358:0 |==> -1
96:ROR:!=(long,long):<(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):189:7350:sign != 0 |==> sign < 0
97:ROR:!=(long,long):>(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):189:7350:sign != 0 |==> sign > 0
98:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):189:7355:sign != 0 |==> true
99:ORU:-(long):+(long):org.apache.commons.math3.fraction.BigFraction@<init>(double):190:7379:-m |==> +m
100:ORU:-(long):~(long):org.apache.commons.math3.fraction.BigFraction@<init>(double):190:7379:-m |==> ~m
101:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double):190:7375:m = -m; |==> <NO-OP>
102:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7429:52 |==> 0
103:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7429:52 |==> -52
104:SOR:>>(long,int):<<(long,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7417:exponent >> 52 |==> exponent << 52
105:SOR:>>(long,int):>>>(long,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7417:exponent >> 52 |==> exponent >>> 52
106:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7436:1075 |==> 0
107:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7436:1075 |==> -1075
108:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7409:((int)(exponent >> 52)) - 1075 |==> ((int)(exponent >> 52)) % 1075
109:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7409:((int)(exponent >> 52)) - 1075 |==> ((int)(exponent >> 52)) * 1075
110:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7409:((int)(exponent >> 52)) - 1075 |==> ((int)(exponent >> 52)) + 1075
111:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):192:7409:((int)(exponent >> 52)) - 1075 |==> ((int)(exponent >> 52)) / 1075
112:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7463:9007199254740990L |==> 0L
113:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7463:9007199254740990L |==> -9007199254740990L
114:LOR:&(long,long):^(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7459:m & 9007199254740990L |==> m ^ 9007199254740990L
115:LOR:&(long,long):|(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7459:m & 9007199254740990L |==> m | 9007199254740990L
116:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7487:0 |==> 1
117:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7487:0 |==> -1
118:ROR:!=(long,long):<(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7458:(m & 9007199254740990L) != 0 |==> (m & 9007199254740990L) < 0
119:ROR:!=(long,long):>(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7458:(m & 9007199254740990L) != 0 |==> (m & 9007199254740990L) > 0
120:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7484:(m & 9007199254740990L) != 0 |==> true
121:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7499:1 |==> 0
122:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7499:1 |==> -1
123:LOR:&(long,long):^(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7495:m & 1 |==> m ^ 1
124:LOR:&(long,long):|(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7495:m & 1 |==> m | 1
125:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7507:0 |==> 1
126:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7507:0 |==> -1
127:ROR:==(long,long):<=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7494:(m & 1) == 0 |==> (m & 1) <= 0
128:ROR:==(long,long):>=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7494:(m & 1) == 0 |==> (m & 1) >= 0
129:ROR:==(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7504:(m & 1) == 0 |==> false
130:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7457:((m & 9007199254740990L) != 0) && ((m & 1) == 0) |==> ((m & 9007199254740990L) != 0) == ((m & 1) == 0)
131:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7490:((m & 9007199254740990L) != 0) && ((m & 1) == 0) |==> false
132:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7457:((m & 9007199254740990L) != 0) && ((m & 1) == 0) |==> ((m & 9007199254740990L) != 0)
133:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double):193:7493:((m & 9007199254740990L) != 0) && ((m & 1) == 0) |==> ((m & 1) == 0)
134:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double):194:7534:1 |==> 0
135:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):194:7534:1 |==> -1
136:SOR:>>(long,int):<<(long,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):194:7529:m >> 1 |==> m << 1
137:SOR:>>(long,int):>>>(long,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):194:7529:m >> 1 |==> m >>> 1
138:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double):194:7525:m = m >> 1; |==> <NO-OP>
139:STD:<INC>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double):195:7549:++k; |==> <NO-OP>
140:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double):198:7581:0 |==> 1
141:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double):198:7581:0 |==> -1
142:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):198:7577:k < 0 |==> k != 0
143:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):198:7577:k < 0 |==> k <= 0
144:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double):198:7579:k < 0 |==> false
145:ORU:-(int):+(int):org.apache.commons.math3.fraction.BigFraction@<init>(double):200:7685:-k |==> +k
146:ORU:-(int):~(int):org.apache.commons.math3.fraction.BigFraction@<init>(double):200:7685:-k |==> ~k
147:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):275:10642:a0 > overflow |==> a0 != overflow
148:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):275:10642:a0 > overflow |==> a0 >= overflow
149:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):275:10645:a0 > overflow |==> false
150:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):276:10720:1L |==> 0L
151:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):276:10720:1L |==> -1L
152:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10856:a0 - value |==> a0 % value
153:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10856:a0 - value |==> a0 * value
154:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10856:a0 - value |==> a0 + value
155:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10856:a0 - value |==> a0 / value
156:ROR:<(double,double):!=(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10843:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) != epsilon
157:ROR:<(double,double):<=(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10843:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) <= epsilon
158:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):281:10868:FastMath.abs(a0 - value) < epsilon |==> false
159:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):287:11020:1 |==> 0
160:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):287:11020:1 |==> -1
161:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):288:11041:0 |==> 1
162:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):288:11041:0 |==> -1
163:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):290:11084:1 |==> 0
164:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):290:11084:1 |==> -1
165:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):295:11147:0 |==> 1
166:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):295:11147:0 |==> -1
167:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):296:11173:false |==> true
168:STD:<INC>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):298:11205:++n; |==> <NO-OP>
169:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 |==> 0.0
170:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 |==> -1.0
171:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11247:r0 - a0 |==> r0 % a0
172:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11247:r0 - a0 |==> r0 * a0
173:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11247:r0 - a0 |==> r0 + a0
174:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11247:r0 - a0 |==> r0 / a0
175:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 / (r0 - a0) |==> 1.0 % (r0 - a0)
176:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 / (r0 - a0) |==> 1.0 * (r0 - a0)
177:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 / (r0 - a0) |==> 1.0 + (r0 - a0)
178:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):299:11240:1.0 / (r0 - a0) |==> 1.0 - (r0 - a0)
179:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11330:a1 * p1 |==> a1 % p1
180:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11330:a1 * p1 |==> a1 + p1
181:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11330:a1 * p1 |==> a1 - p1
182:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11330:a1 * p1 |==> a1 / p1
183:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11329:(a1 * p1) + p0 |==> (a1 * p1) % p0
184:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11329:(a1 * p1) + p0 |==> (a1 * p1) * p0
185:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11329:(a1 * p1) + p0 |==> (a1 * p1) - p0
186:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11329:(a1 * p1) + p0 |==> (a1 * p1) / p0
187:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):301:11324:p2 = (a1 * p1) + p0; |==> <NO-OP>
188:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11363:a1 * q1 |==> a1 % q1
189:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11363:a1 * q1 |==> a1 + q1
190:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11363:a1 * q1 |==> a1 - q1
191:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11363:a1 * q1 |==> a1 / q1
192:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11362:(a1 * q1) + q0 |==> (a1 * q1) % q0
193:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11362:(a1 * q1) + q0 |==> (a1 * q1) * q0
194:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11362:(a1 * q1) + q0 |==> (a1 * q1) - q0
195:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11362:(a1 * q1) + q0 |==> (a1 * q1) / q0
196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):302:11357:q2 = (a1 * q1) + q0; |==> <NO-OP>
197:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11395:p2 > overflow |==> p2 != overflow
198:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11395:p2 > overflow |==> p2 >= overflow
199:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11398:p2 > overflow |==> false
200:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11414:q2 > overflow |==> q2 != overflow
201:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11414:q2 > overflow |==> q2 >= overflow
202:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11417:q2 > overflow |==> false
203:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11394:(p2 > overflow) || (q2 > overflow) |==> (p2 > overflow) != (q2 > overflow)
204:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11394:(p2 > overflow) || (q2 > overflow) |==> (p2 > overflow)
205:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11413:(p2 > overflow) || (q2 > overflow) |==> (q2 > overflow)
206:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):303:11410:(p2 > overflow) || (q2 > overflow) |==> true
207:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):309:11746:(double)p2 / (double)q2 |==> (double)p2 % (double)q2
208:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):309:11746:(double)p2 / (double)q2 |==> (double)p2 * (double)q2
209:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):309:11746:(double)p2 / (double)q2 |==> (double)p2 + (double)q2
210:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):309:11746:(double)p2 / (double)q2 |==> (double)p2 - (double)q2
211:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11790:n < maxIterations |==> n != maxIterations
212:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11790:n < maxIterations |==> n <= maxIterations
213:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11792:n < maxIterations |==> false
214:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11842:convergent - value |==> convergent % value
215:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11842:convergent - value |==> convergent * value
216:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11842:convergent - value |==> convergent + value
217:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11842:convergent - value |==> convergent / value
218:ROR:>(double,double):!=(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11829:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) != epsilon
219:ROR:>(double,double):>=(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11829:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) >= epsilon
220:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11862:FastMath.abs(convergent - value) > epsilon |==> false
221:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11789:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) |==> (n < maxIterations) == (FastMath.abs(convergent - value) > epsilon)
222:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11809:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) |==> false
223:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11789:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) |==> (n < maxIterations)
224:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11828:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) |==> (FastMath.abs(convergent - value) > epsilon)
225:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):312:11893:q2 < maxDenominator |==> q2 != maxDenominator
226:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):312:11893:q2 < maxDenominator |==> q2 <= maxDenominator
227:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):312:11896:q2 < maxDenominator |==> false
228:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11789:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) && (q2 < maxDenominator) |==> ((n < maxIterations) && (FastMath.abs(convergent - value) > epsilon)) == (q2 < maxDenominator)
229:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):311:11873:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) && (q2 < maxDenominator) |==> false
230:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):310:11789:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) && (q2 < maxDenominator) |==> (n < maxIterations) && (FastMath.abs(convergent - value) > epsilon)
231:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):312:11892:(n < maxIterations) && (FastMath.abs(convergent - value) > epsilon) && (q2 < maxDenominator) |==> (q2 < maxDenominator)
232:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):313:11933:p0 = p1; |==> <NO-OP>
233:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):314:11958:p1 = p2; |==> <NO-OP>
234:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):315:11983:q0 = q1; |==> <NO-OP>
235:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):316:12008:q1 = q2; |==> <NO-OP>
236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):317:12033:a0 = a1; |==> <NO-OP>
237:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):318:12058:r0 = r1; |==> <NO-OP>
238:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):320:12111:true |==> false
239:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):320:12104:stop = true; |==> <NO-OP>
240:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):324:12169:n >= maxIterations |==> n == maxIterations
241:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):324:12169:n >= maxIterations |==> n > maxIterations
242:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):324:12171:n >= maxIterations |==> true
243:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):328:12287:q2 < maxDenominator |==> q2 != maxDenominator
244:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):328:12287:q2 < maxDenominator |==> q2 <= maxDenominator
245:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@<init>(double,double,int,int):328:12290:q2 < maxDenominator |==> false
246:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@<init>(double,int):356:13258:0 |==> 1
247:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,int):356:13258:0 |==> -1
248:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@<init>(double,int):356:13277:100 |==> 0
249:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@<init>(double,int):356:13277:100 |==> -100
250:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@getReducedFraction(int,int):435:15531:0 |==> 1
251:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@getReducedFraction(int,int):435:15531:0 |==> -1
252:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@getReducedFraction(int,int):435:15518:numerator == 0 |==> numerator <= 0
253:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.BigFraction@getReducedFraction(int,int):435:15518:numerator == 0 |==> numerator >= 0
254:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@getReducedFraction(int,int):435:15528:numerator == 0 |==> false
255:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@abs():450:15910:0 |==> 1
256:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@abs():450:15910:0 |==> -1
257:ROR:<=(int,int):<(int,int):org.apache.commons.math3.fraction.BigFraction@abs():450:15870:BigInteger.ZERO.compareTo(numerator) <= 0 |==> BigInteger.ZERO.compareTo(numerator) < 0
258:ROR:<=(int,int):==(int,int):org.apache.commons.math3.fraction.BigFraction@abs():450:15870:BigInteger.ZERO.compareTo(numerator) <= 0 |==> BigInteger.ZERO.compareTo(numerator) == 0
259:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.BigFraction@abs():450:15907:BigInteger.ZERO.compareTo(numerator) <= 0 |==> true
260:STD:<CALL>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@add(java.math.BigInteger):466:16468:MathUtils.checkNotNull(bg); |==> <NO-OP>
261:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):510:17852:fraction == null |==> false
262:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):513:17968:ZERO.equals(fraction) |==> false
263:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):513:17968:ZERO.equals(fraction) |==> true
264:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):520:18111:denominator.equals(fraction.denominator) |==> false
265:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):520:18111:denominator.equals(fraction.denominator) |==> true
266:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):521:18149:num = numerator.add(fraction.numerator); |==> <NO-OP>
267:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):522:18202:den = denominator; |==> <NO-OP>
268:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):524:18250:num = (numerator.multiply(fraction.denominator)).add((fraction.numerator).multiply(denominator)); |==> <NO-OP>
269:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@add(org.apache.commons.math3.fraction.BigFraction):525:18360:den = denominator.multiply(fraction.denominator); |==> <NO-OP>
270:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@divide(java.math.BigInteger):614:21658:bg == null |==> false
271:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@divide(java.math.BigInteger):617:21785:BigInteger.ZERO.equals(bg) |==> false
272:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@divide(java.math.BigInteger):617:21785:BigInteger.ZERO.equals(bg) |==> true
273:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@divide(org.apache.commons.math3.fraction.BigFraction):663:23438:fraction == null |==> false
274:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@divide(org.apache.commons.math3.fraction.BigFraction):666:23565:BigInteger.ZERO.equals(fraction.numerator) |==> false
275:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@divide(org.apache.commons.math3.fraction.BigFraction):666:23565:BigInteger.ZERO.equals(fraction.numerator) |==> true
276:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():684:24071:numerator.doubleValue() / denominator.doubleValue() |==> numerator.doubleValue() % denominator.doubleValue()
277:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():684:24071:numerator.doubleValue() / denominator.doubleValue() |==> numerator.doubleValue() * denominator.doubleValue()
278:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():684:24071:numerator.doubleValue() / denominator.doubleValue() |==> numerator.doubleValue() + denominator.doubleValue()
279:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():684:24071:numerator.doubleValue() / denominator.doubleValue() |==> numerator.doubleValue() - denominator.doubleValue()
280:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@doubleValue():685:24148:Double.isNaN(result) |==> false
281:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@doubleValue():685:24148:Double.isNaN(result) |==> true
282:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@doubleValue():688:24319:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) % FastMath.getExponent(Double.MAX_VALUE)
283:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.BigFraction@doubleValue():688:24319:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) * FastMath.getExponent(Double.MAX_VALUE)
284:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.BigFraction@doubleValue():688:24319:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) + FastMath.getExponent(Double.MAX_VALUE)
285:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@doubleValue():688:24319:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) / FastMath.getExponent(Double.MAX_VALUE)
286:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():690:24472:numerator.shiftRight(shift).doubleValue() / denominator.shiftRight(shift).doubleValue() |==> numerator.shiftRight(shift).doubleValue() % denominator.shiftRight(shift).doubleValue()
287:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():690:24472:numerator.shiftRight(shift).doubleValue() / denominator.shiftRight(shift).doubleValue() |==> numerator.shiftRight(shift).doubleValue() * denominator.shiftRight(shift).doubleValue()
288:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():690:24472:numerator.shiftRight(shift).doubleValue() / denominator.shiftRight(shift).doubleValue() |==> numerator.shiftRight(shift).doubleValue() + denominator.shiftRight(shift).doubleValue()
289:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.BigFraction@doubleValue():690:24472:numerator.shiftRight(shift).doubleValue() / denominator.shiftRight(shift).doubleValue() |==> numerator.shiftRight(shift).doubleValue() - denominator.shiftRight(shift).doubleValue()
290:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@doubleValue():690:24463:result = numerator.shiftRight(shift).doubleValue() / denominator.shiftRight(shift).doubleValue(); |==> <NO-OP>
291:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):713:25313:false |==> true
292:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):715:25338:this == other |==> false
293:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):716:25368:true |==> false
294:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):716:25362:ret = true; |==> <NO-OP>
295:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):720:25554:thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator) |==> thisOne.numerator.equals(rhs.numerator) == thisOne.denominator.equals(rhs.denominator)
296:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):720:25594:thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator) |==> false
297:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):720:25554:thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator) |==> thisOne.numerator.equals(rhs.numerator)
298:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):720:25597:thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator) |==> thisOne.denominator.equals(rhs.denominator)
299:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@equals(java.lang.Object):720:25548:ret = thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator); |==> <NO-OP>
300:AOR:/(float,float):%(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():737:26009:numerator.floatValue() / denominator.floatValue() |==> numerator.floatValue() % denominator.floatValue()
301:AOR:/(float,float):*(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():737:26009:numerator.floatValue() / denominator.floatValue() |==> numerator.floatValue() * denominator.floatValue()
302:AOR:/(float,float):+(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():737:26009:numerator.floatValue() / denominator.floatValue() |==> numerator.floatValue() + denominator.floatValue()
303:AOR:/(float,float):-(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():737:26009:numerator.floatValue() / denominator.floatValue() |==> numerator.floatValue() - denominator.floatValue()
304:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@floatValue():738:26084:Double.isNaN(result) |==> false
305:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@floatValue():738:26084:Double.isNaN(result) |==> true
306:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@floatValue():741:26255:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) % FastMath.getExponent(Float.MAX_VALUE)
307:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.BigFraction@floatValue():741:26255:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) * FastMath.getExponent(Float.MAX_VALUE)
308:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.BigFraction@floatValue():741:26255:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) + FastMath.getExponent(Float.MAX_VALUE)
309:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@floatValue():741:26255:Math.max(numerator.bitLength(), denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE) |==> Math.max(numerator.bitLength(), denominator.bitLength()) / FastMath.getExponent(Float.MAX_VALUE)
310:AOR:/(float,float):%(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():743:26407:numerator.shiftRight(shift).floatValue() / denominator.shiftRight(shift).floatValue() |==> numerator.shiftRight(shift).floatValue() % denominator.shiftRight(shift).floatValue()
311:AOR:/(float,float):*(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():743:26407:numerator.shiftRight(shift).floatValue() / denominator.shiftRight(shift).floatValue() |==> numerator.shiftRight(shift).floatValue() * denominator.shiftRight(shift).floatValue()
312:AOR:/(float,float):+(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():743:26407:numerator.shiftRight(shift).floatValue() / denominator.shiftRight(shift).floatValue() |==> numerator.shiftRight(shift).floatValue() + denominator.shiftRight(shift).floatValue()
313:AOR:/(float,float):-(float,float):org.apache.commons.math3.fraction.BigFraction@floatValue():743:26407:numerator.shiftRight(shift).floatValue() / denominator.shiftRight(shift).floatValue() |==> numerator.shiftRight(shift).floatValue() - denominator.shiftRight(shift).floatValue()
314:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@floatValue():743:26398:result = numerator.shiftRight(shift).floatValue() / denominator.shiftRight(shift).floatValue(); |==> <NO-OP>
315:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 |==> 0
316:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 |==> -37
317:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 |==> 0
318:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 |==> -37
319:LVR:POS:0:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28187:17 |==> 0
320:LVR:POS:NEG:org.apache.commons.math3.fraction.BigFraction@hashCode():825:28187:17 |==> -17
321:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 |==> 37 % 17
322:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 |==> 37 + 17
323:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 |==> 37 - 17
324:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 |==> 37 / 17
325:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 + numerator.hashCode() |==> 37 * 17 % numerator.hashCode()
326:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 + numerator.hashCode() |==> 37 * 17 * numerator.hashCode()
327:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 + numerator.hashCode() |==> 37 * 17 - numerator.hashCode()
328:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28182:37 * 17 + numerator.hashCode() |==> 37 * 17 / numerator.hashCode()
329:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) |==> 37 % (37 * 17 + numerator.hashCode())
330:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) |==> 37 + (37 * 17 + numerator.hashCode())
331:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) |==> 37 - (37 * 17 + numerator.hashCode())
332:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) |==> 37 / (37 * 17 + numerator.hashCode())
333:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode() |==> 37 * (37 * 17 + numerator.hashCode()) % denominator.hashCode()
334:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode() |==> 37 * (37 * 17 + numerator.hashCode()) * denominator.hashCode()
335:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode() |==> 37 * (37 * 17 + numerator.hashCode()) - denominator.hashCode()
336:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.BigFraction@hashCode():825:28176:37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode() |==> 37 * (37 * 17 + numerator.hashCode()) / denominator.hashCode()
337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@multiply(java.math.BigInteger):867:29379:bg == null |==> false
338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@multiply(org.apache.commons.math3.fraction.BigFraction):912:30786:fraction == null |==> false
339:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@multiply(org.apache.commons.math3.fraction.BigFraction):915:30891:numerator.equals(BigInteger.ZERO) || fraction.numerator.equals(BigInteger.ZERO) |==> numerator.equals(BigInteger.ZERO) != fraction.numerator.equals(BigInteger.ZERO)
340:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@multiply(org.apache.commons.math3.fraction.BigFraction):915:30891:numerator.equals(BigInteger.ZERO) || fraction.numerator.equals(BigInteger.ZERO) |==> numerator.equals(BigInteger.ZERO)
341:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@multiply(org.apache.commons.math3.fraction.BigFraction):916:30940:numerator.equals(BigInteger.ZERO) || fraction.numerator.equals(BigInteger.ZERO) |==> fraction.numerator.equals(BigInteger.ZERO)
342:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.BigFraction@multiply(org.apache.commons.math3.fraction.BigFraction):915:30925:numerator.equals(BigInteger.ZERO) || fraction.numerator.equals(BigInteger.ZERO) |==> true
343:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@pow(int):959:32246:0 |==> 1
344:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@pow(int):959:32246:0 |==> -1
345:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@pow(int):959:32235:exponent < 0 |==> exponent != 0
346:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@pow(int):959:32235:exponent < 0 |==> exponent <= 0
347:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@pow(int):959:32244:exponent < 0 |==> false
348:ORU:-(int):+(int):org.apache.commons.math3.fraction.BigFraction@pow(int):960:32302:-exponent |==> +exponent
349:ORU:-(int):~(int):org.apache.commons.math3.fraction.BigFraction@pow(int):960:32302:-exponent |==> ~exponent
350:ORU:-(int):+(int):org.apache.commons.math3.fraction.BigFraction@pow(int):960:32328:-exponent |==> +exponent
351:ORU:-(int):~(int):org.apache.commons.math3.fraction.BigFraction@pow(int):960:32328:-exponent |==> ~exponent
352:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@pow(long):976:32884:0 |==> 1
353:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@pow(long):976:32884:0 |==> -1
354:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.BigFraction@pow(long):976:32873:exponent < 0 |==> exponent != 0
355:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.BigFraction@pow(long):976:32873:exponent < 0 |==> exponent <= 0
356:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.BigFraction@pow(long):976:32882:exponent < 0 |==> false
357:ORU:-(long):+(long):org.apache.commons.math3.fraction.BigFraction@pow(long):977:32957:-exponent |==> +exponent
358:ORU:-(long):~(long):org.apache.commons.math3.fraction.BigFraction@pow(long):977:32957:-exponent |==> ~exponent
359:ORU:-(long):+(long):org.apache.commons.math3.fraction.BigFraction@pow(long):978:33037:-exponent |==> +exponent
360:ORU:-(long):~(long):org.apache.commons.math3.fraction.BigFraction@pow(long):978:33037:-exponent |==> ~exponent
361:LVR:0:POS:org.apache.commons.math3.fraction.BigFraction@pow(java.math.BigInteger):995:33693:0 |==> 1
362:LVR:0:NEG:org.apache.commons.math3.fraction.BigFraction@pow(java.math.BigInteger):995:33693:0 |==> -1
363:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.BigFraction@pow(java.math.BigInteger):995:33655:exponent.compareTo(BigInteger.ZERO) < 0 |==> exponent.compareTo(BigInteger.ZERO) != 0
364:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.BigFraction@pow(java.math.BigInteger):995:33655:exponent.compareTo(BigInteger.ZERO) < 0 |==> exponent.compareTo(BigInteger.ZERO) <= 0
365:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.BigFraction@pow(java.math.BigInteger):995:33691:exponent.compareTo(BigInteger.ZERO) < 0 |==> false
366:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.BigFraction@pow(double):1015:34468:FastMath.pow(numerator.doubleValue(), exponent) / FastMath.pow(denominator.doubleValue(), exponent) |==> FastMath.pow(numerator.doubleValue(), exponent) % FastMath.pow(denominator.doubleValue(), exponent)
367:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.BigFraction@pow(double):1015:34468:FastMath.pow(numerator.doubleValue(), exponent) / FastMath.pow(denominator.doubleValue(), exponent) |==> FastMath.pow(numerator.doubleValue(), exponent) * FastMath.pow(denominator.doubleValue(), exponent)
368:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.BigFraction@pow(double):1015:34468:FastMath.pow(numerator.doubleValue(), exponent) / FastMath.pow(denominator.doubleValue(), exponent) |==> FastMath.pow(numerator.doubleValue(), exponent) + FastMath.pow(denominator.doubleValue(), exponent)
369:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.BigFraction@pow(double):1015:34468:FastMath.pow(numerator.doubleValue(), exponent) / FastMath.pow(denominator.doubleValue(), exponent) |==> FastMath.pow(numerator.doubleValue(), exponent) - FastMath.pow(denominator.doubleValue(), exponent)
370:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@subtract(java.math.BigInteger):1054:35744:bg == null |==> false
371:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1097:37201:fraction == null |==> false
372:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1100:37317:ZERO.equals(fraction) |==> false
373:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1100:37317:ZERO.equals(fraction) |==> true
374:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1106:37459:denominator.equals(fraction.denominator) |==> false
375:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1106:37459:denominator.equals(fraction.denominator) |==> true
376:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1107:37497:num = numerator.subtract(fraction.numerator); |==> <NO-OP>
377:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1108:37555:den = denominator; |==> <NO-OP>
378:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1110:37603:num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator)); |==> <NO-OP>
379:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@subtract(org.apache.commons.math3.fraction.BigFraction):1111:37718:den = denominator.multiply(fraction.denominator); |==> <NO-OP>
380:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@toString():1129:38205:BigInteger.ONE.equals(denominator) |==> false
381:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@toString():1129:38205:BigInteger.ONE.equals(denominator) |==> true
382:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@toString():1130:38234:str = numerator.toString(); |==> <NO-OP>
383:COR:<METHOD_INVOCATION(boolean)>:FALSE:org.apache.commons.math3.fraction.BigFraction@toString():1131:38303:BigInteger.ZERO.equals(numerator) |==> false
384:COR:<METHOD_INVOCATION(boolean)>:TRUE:org.apache.commons.math3.fraction.BigFraction@toString():1131:38303:BigInteger.ZERO.equals(numerator) |==> true
385:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@toString():1132:38330:str = "0"; |==> <NO-OP>
386:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.BigFraction@toString():1134:38370:str = numerator + " / " + denominator; |==> <NO-OP>
387:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:1587:2 |==> 0
388:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:1587:2 |==> -2
389:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:1590:1 |==> 0
390:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:1590:1 |==> -1
391:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1687:1 |==> 0
392:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1687:1 |==> -1
393:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1690:1 |==> 0
394:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1690:1 |==> -1
395:LVR:0:POS:org.apache.commons.math3.fraction.Fraction:48:1788:0 |==> 1
396:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction:48:1788:0 |==> -1
397:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:48:1791:1 |==> 0
398:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:48:1791:1 |==> -1
399:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:1898:4 |==> 0
400:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:1898:4 |==> -4
401:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:1901:5 |==> 0
402:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:1901:5 |==> -5
403:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:2006:1 |==> 0
404:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:2006:1 |==> -1
405:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:2009:5 |==> 0
406:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:2009:5 |==> -5
407:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:2113:1 |==> 0
408:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:2113:1 |==> -1
409:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:2116:2 |==> 0
410:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:2116:2 |==> -2
411:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:2223:1 |==> 0
412:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:2223:1 |==> -1
413:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:2226:4 |==> 0
414:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:2226:4 |==> -4
415:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:2331:1 |==> 0
416:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:2331:1 |==> -1
417:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:2334:3 |==> 0
418:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:2334:3 |==> -3
419:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:2442:3 |==> 0
420:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:2442:3 |==> -3
421:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:2445:5 |==> 0
422:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:2445:5 |==> -5
423:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:2555:3 |==> 0
424:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:2555:3 |==> -3
425:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:2558:4 |==> 0
426:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:2558:4 |==> -4
427:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:2664:2 |==> 0
428:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:2664:2 |==> -2
429:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:2667:5 |==> 0
430:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:2667:5 |==> -5
431:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:2775:2 |==> 0
432:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:2775:2 |==> -2
433:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:2778:4 |==> 0
434:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:2778:4 |==> -4
435:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:2884:2 |==> 0
436:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:2884:2 |==> -2
437:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:2887:3 |==> 0
438:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:2887:3 |==> -3
439:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction:81:2995:-1 |==> 0
440:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction:81:2995:-1 |==> 1
441:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:81:2999:1 |==> 0
442:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:81:2999:1 |==> -1
443:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double):102:3693:100 |==> 0
444:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double):102:3693:100 |==> -100
445:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,int):144:5215:0 |==> 1
446:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):144:5215:0 |==> -1
447:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,int):144:5234:100 |==> 0
448:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):144:5234:100 |==> -100
449:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):184:6922:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) != overflow
450:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):184:6922:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) >= overflow
451:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):184:6939:FastMath.abs(a0) > overflow |==> false
452:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):185:7014:1L |==> 0L
453:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):185:7014:1L |==> -1L
454:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7139:a0 - value |==> a0 % value
455:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7139:a0 - value |==> a0 * value
456:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7139:a0 - value |==> a0 + value
457:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7139:a0 - value |==> a0 / value
458:ROR:<(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7126:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) != epsilon
459:ROR:<(double,double):<=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7126:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) <= epsilon
460:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:7151:FastMath.abs(a0 - value) < epsilon |==> false
461:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):191:7234:1 |==> 0
462:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):191:7234:1 |==> -1
463:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):195:7286:1 |==> 0
464:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):195:7286:1 |==> -1
465:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:7307:0 |==> 1
466:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:7307:0 |==> -1
467:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:7350:1 |==> 0
468:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:7350:1 |==> -1
469:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):203:7413:0 |==> 1
470:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):203:7413:0 |==> -1
471:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):204:7439:false |==> true
472:STD:<INC>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):206:7471:++n; |==> <NO-OP>
473:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 |==> 0.0
474:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 |==> -1.0
475:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7507:r0 - a0 |==> r0 % a0
476:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7507:r0 - a0 |==> r0 * a0
477:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7507:r0 - a0 |==> r0 + a0
478:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7507:r0 - a0 |==> r0 / a0
479:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 / (r0 - a0) |==> 1.0 % (r0 - a0)
480:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 / (r0 - a0) |==> 1.0 * (r0 - a0)
481:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 / (r0 - a0) |==> 1.0 + (r0 - a0)
482:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:7500:1.0 / (r0 - a0) |==> 1.0 - (r0 - a0)
483:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7583:a1 * p1 |==> a1 % p1
484:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7583:a1 * p1 |==> a1 + p1
485:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7583:a1 * p1 |==> a1 - p1
486:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7583:a1 * p1 |==> a1 / p1
487:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7582:(a1 * p1) + p0 |==> (a1 * p1) % p0
488:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7582:(a1 * p1) + p0 |==> (a1 * p1) * p0
489:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7582:(a1 * p1) + p0 |==> (a1 * p1) - p0
490:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7582:(a1 * p1) + p0 |==> (a1 * p1) / p0
491:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:7577:p2 = (a1 * p1) + p0; |==> <NO-OP>
492:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7616:a1 * q1 |==> a1 % q1
493:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7616:a1 * q1 |==> a1 + q1
494:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7616:a1 * q1 |==> a1 - q1
495:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7616:a1 * q1 |==> a1 / q1
496:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7615:(a1 * q1) + q0 |==> (a1 * q1) % q0
497:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7615:(a1 * q1) + q0 |==> (a1 * q1) * q0
498:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7615:(a1 * q1) + q0 |==> (a1 * q1) - q0
499:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7615:(a1 * q1) + q0 |==> (a1 * q1) / q0
500:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):210:7610:q2 = (a1 * q1) + q0; |==> <NO-OP>
501:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7649:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) != overflow
502:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7649:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) >= overflow
503:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7666:FastMath.abs(p2) > overflow |==> false
504:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7682:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) != overflow
505:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7682:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) >= overflow
506:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7699:FastMath.abs(q2) > overflow |==> false
507:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7648:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow) != (FastMath.abs(q2) > overflow)
508:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7648:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow)
509:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7681:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(q2) > overflow)
510:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):212:7678:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> true
511:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:8022:(double)p2 / (double)q2 |==> (double)p2 % (double)q2
512:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:8022:(double)p2 / (double)q2 |==> (double)p2 * (double)q2
513:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:8022:(double)p2 / (double)q2 |==> (double)p2 + (double)q2
514:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:8022:(double)p2 / (double)q2 |==> (double)p2 - (double)q2
515:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations |==> n != maxIterations
516:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations |==> n <= maxIterations
517:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8065:n < maxIterations |==> false
518:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8097:convergent - value |==> convergent % value
519:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8097:convergent - value |==> convergent * value
520:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8097:convergent - value |==> convergent + value
521:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8097:convergent - value |==> convergent / value
522:ROR:>(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8084:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) != epsilon
523:ROR:>(double,double):>=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8084:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) >= epsilon
524:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8117:FastMath.abs(convergent - value) > epsilon |==> false
525:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations == FastMath.abs(convergent - value) > epsilon
526:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8081:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> false
527:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations
528:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8084:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) > epsilon
529:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8130:q2 < maxDenominator |==> q2 != maxDenominator
530:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8130:q2 < maxDenominator |==> q2 <= maxDenominator
531:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8133:q2 < maxDenominator |==> false
532:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> (n < maxIterations && FastMath.abs(convergent - value) > epsilon) == q2 < maxDenominator
533:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8127:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> false
534:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8063:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> n < maxIterations && FastMath.abs(convergent - value) > epsilon
535:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:8130:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> q2 < maxDenominator
536:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):220:8169:p0 = p1; |==> <NO-OP>
537:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):221:8194:p1 = p2; |==> <NO-OP>
538:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):222:8219:q0 = q1; |==> <NO-OP>
539:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):223:8244:q1 = q2; |==> <NO-OP>
540:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):224:8269:a0 = a1; |==> <NO-OP>
541:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):225:8294:r0 = r1; |==> <NO-OP>
542:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):227:8347:true |==> false
543:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):227:8340:stop = true; |==> <NO-OP>
544:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):231:8405:n >= maxIterations |==> n == maxIterations
545:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):231:8405:n >= maxIterations |==> n > maxIterations
546:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):231:8407:n >= maxIterations |==> true
547:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):235:8523:q2 < maxDenominator |==> q2 != maxDenominator
548:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):235:8523:q2 < maxDenominator |==> q2 <= maxDenominator
549:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):235:8526:q2 < maxDenominator |==> false
550:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int):251:8909:1 |==> 0
551:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int):251:8909:1 |==> -1
552:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:9248:0 |==> 1
553:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:9248:0 |==> -1
554:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:9241:den == 0 |==> den <= 0
555:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:9241:den == 0 |==> den >= 0
556:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:9245:den == 0 |==> false
557:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):266:9431:0 |==> 1
558:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):266:9431:0 |==> -1
559:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):266:9425:den < 0 |==> den != 0
560:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):266:9425:den < 0 |==> den <= 0
561:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):266:9429:den < 0 |==> false
562:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:9452:num == Integer.MIN_VALUE |==> num >= Integer.MIN_VALUE
563:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:9456:num == Integer.MIN_VALUE |==> false
564:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:9496:den == Integer.MIN_VALUE |==> den >= Integer.MIN_VALUE
565:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:9500:den == Integer.MIN_VALUE |==> false
566:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:9452:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE != (den == Integer.MIN_VALUE)
567:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:9452:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE
568:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:9496:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> den == Integer.MIN_VALUE
569:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:9477:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> true
570:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:9706:-num |==> +num
571:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:9706:-num |==> ~num
572:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:9700:num = -num; |==> <NO-OP>
573:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):273:9730:-den |==> +den
574:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):273:9730:-den |==> ~den
575:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):273:9724:den = -den; |==> <NO-OP>
576:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int,int):277:9891:1 |==> 0
577:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):277:9891:1 |==> -1
578:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):277:9887:d > 1 |==> d != 1
579:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):277:9887:d > 1 |==> d >= 1
580:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):277:9889:d > 1 |==> false
581:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:9908:num /= d; |==> <NO-OP>
582:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:9930:den /= d; |==> <NO-OP>
583:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):283:10004:0 |==> 1
584:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):283:10004:0 |==> -1
585:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):283:9998:den < 0 |==> den != 0
586:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):283:9998:den < 0 |==> den <= 0
587:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):283:10002:den < 0 |==> false
588:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):284:10027:-num |==> +num
589:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):284:10027:-num |==> ~num
590:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):284:10021:num = -num; |==> <NO-OP>
591:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):285:10051:-den |==> +den
592:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):285:10051:-den |==> ~den
593:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):285:10045:den = -den; |==> <NO-OP>
594:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@abs():297:10316:0 |==> 1
595:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@abs():297:10316:0 |==> -1
596:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@abs():297:10303:numerator >= 0 |==> numerator == 0
597:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@abs():297:10303:numerator >= 0 |==> numerator > 0
598:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@abs():297:10313:numerator >= 0 |==> true
599:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):312:10742:((long)numerator) * object.denominator |==> ((long)numerator) % object.denominator
600:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):312:10742:((long)numerator) * object.denominator |==> ((long)numerator) + object.denominator
601:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):312:10742:((long)numerator) * object.denominator |==> ((long)numerator) - object.denominator
602:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):312:10742:((long)numerator) * object.denominator |==> ((long)numerator) / object.denominator
603:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):313:10802:((long)denominator) * object.numerator |==> ((long)denominator) % object.numerator
604:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):313:10802:((long)denominator) * object.numerator |==> ((long)denominator) + object.numerator
605:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):313:10802:((long)denominator) * object.numerator |==> ((long)denominator) - object.numerator
606:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):313:10802:((long)denominator) * object.numerator |==> ((long)denominator) / object.numerator
607:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10859:nOd < dOn |==> nOd != dOn
608:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10859:nOd < dOn |==> nOd <= dOn
609:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10863:nOd < dOn |==> false
610:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10872:-1 |==> 0
611:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10872:-1 |==> 1
612:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10879:nOd > dOn |==> nOd != dOn
613:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10879:nOd > dOn |==> nOd >= dOn
614:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10883:nOd > dOn |==> false
615:ORU:+(int):-(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10892:+1 |==> -1
616:ORU:+(int):~(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10892:+1 |==> ~1
617:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10893:1 |==> 0
618:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10893:1 |==> -1
619:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10897:0 |==> 1
620:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):314:10897:0 |==> -1
621:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():324:11160:(double)numerator / (double)denominator |==> (double)numerator % (double)denominator
622:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():324:11160:(double)numerator / (double)denominator |==> (double)numerator * (double)denominator
623:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():324:11160:(double)numerator / (double)denominator |==> (double)numerator + (double)denominator
624:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():324:11160:(double)numerator / (double)denominator |==> (double)numerator - (double)denominator
625:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):339:11771:true |==> false
626:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12033:numerator == rhs.numerator |==> numerator <= rhs.numerator
627:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12033:numerator == rhs.numerator |==> numerator >= rhs.numerator
628:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12043:numerator == rhs.numerator |==> false
629:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):346:12081:denominator == rhs.denominator |==> denominator <= rhs.denominator
630:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):346:12081:denominator == rhs.denominator |==> denominator >= rhs.denominator
631:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):346:12093:denominator == rhs.denominator |==> false
632:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12032:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator) == (denominator == rhs.denominator)
633:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12061:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> false
634:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):345:12032:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator)
635:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):346:12080:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (denominator == rhs.denominator)
636:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):348:12139:false |==> true
637:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 |==> 0
638:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 |==> -37
639:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 |==> 0
640:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 |==> -37
641:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():383:12892:17 |==> 0
642:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():383:12892:17 |==> -17
643:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 |==> 37 % 17
644:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 |==> 37 + 17
645:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 |==> 37 - 17
646:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 |==> 37 / 17
647:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 + numerator |==> 37 * 17 % numerator
648:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 + numerator |==> 37 * 17 * numerator
649:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 + numerator |==> 37 * 17 - numerator
650:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12887:37 * 17 + numerator |==> 37 * 17 / numerator
651:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) |==> 37 % (37 * 17 + numerator)
652:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) |==> 37 + (37 * 17 + numerator)
653:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) |==> 37 - (37 * 17 + numerator)
654:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) |==> 37 / (37 * 17 + numerator)
655:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) % denominator
656:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) * denominator
657:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) - denominator
658:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():383:12881:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) / denominator
659:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@negate():411:13591:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
660:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@negate():411:13600:numerator == Integer.MIN_VALUE |==> false
661:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@negate():414:13771:-numerator |==> +numerator
662:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@negate():414:13771:-numerator |==> ~numerator
663:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@add(org.apache.commons.math3.fraction.Fraction):436:14583:true |==> false
664:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14810:i * denominator |==> i % denominator
665:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14810:i * denominator |==> i + denominator
666:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14810:i * denominator |==> i - denominator
667:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14810:i * denominator |==> i / denominator
668:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14798:numerator + i * denominator |==> numerator % (i * denominator)
669:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14798:numerator + i * denominator |==> numerator * (i * denominator)
670:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14798:numerator + i * denominator |==> numerator - i * denominator
671:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):445:14798:numerator + i * denominator |==> numerator / (i * denominator)
672:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@subtract(org.apache.commons.math3.fraction.Fraction):459:15424:false |==> true
673:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15674:i * denominator |==> i % denominator
674:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15674:i * denominator |==> i + denominator
675:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15674:i * denominator |==> i - denominator
676:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15674:i * denominator |==> i / denominator
677:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15662:numerator - i * denominator |==> numerator % (i * denominator)
678:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15662:numerator - i * denominator |==> numerator * (i * denominator)
679:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15662:numerator - i * denominator |==> numerator + i * denominator
680:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):468:15662:numerator - i * denominator |==> numerator / (i * denominator)
681:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):482:16290:fraction == null |==> false
682:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):486:16450:0 |==> 1
683:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):486:16450:0 |==> -1
684:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):486:16437:numerator == 0 |==> numerator <= 0
685:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):486:16437:numerator == 0 |==> numerator >= 0
686:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):486:16447:numerator == 0 |==> false
687:COR:<IDENTIFIER(boolean)>:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):487:16474:isAdd |==> false
688:COR:<IDENTIFIER(boolean)>:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):487:16474:isAdd |==> true
689:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):489:16556:0 |==> 1
690:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):489:16556:0 |==> -1
691:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):489:16534:fraction.numerator == 0 |==> fraction.numerator <= 0
692:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):489:16534:fraction.numerator == 0 |==> fraction.numerator >= 0
693:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):489:16553:fraction.numerator == 0 |==> false
694:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:16785:1 |==> 0
695:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:16785:1 |==> -1
696:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:16781:d1 == 1 |==> d1 <= 1
697:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:16781:d1 == 1 |==> d1 >= 1
698:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:16783:d1 == 1 |==> false
699:COR:<IDENTIFIER(boolean)>:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):500:17057:isAdd |==> false
700:COR:<IDENTIFIER(boolean)>:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):500:17057:isAdd |==> true
701:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):508:17514:fraction.denominator / d1 |==> fraction.denominator % d1
702:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):508:17514:fraction.denominator / d1 |==> fraction.denominator * d1
703:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):508:17514:fraction.denominator / d1 |==> fraction.denominator + d1
704:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):508:17514:fraction.denominator / d1 |==> fraction.denominator - d1
705:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:17642:denominator / d1 |==> denominator % d1
706:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:17642:denominator / d1 |==> denominator * d1
707:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:17642:denominator / d1 |==> denominator + d1
708:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:17642:denominator / d1 |==> denominator - d1
709:COR:<IDENTIFIER(boolean)>:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):511:17683:isAdd |==> false
710:COR:<IDENTIFIER(boolean)>:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):511:17683:isAdd |==> true
711:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):515:17915:0 |==> 1
712:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):515:17915:0 |==> -1
713:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):515:17907:tmodd1 == 0 |==> tmodd1 <= 0
714:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):515:17907:tmodd1 == 0 |==> tmodd1 >= 0
715:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):515:17913:tmodd1 == 0 |==> false
716:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:18085:31 |==> 0
717:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:18085:31 |==> -31
718:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:18069:w.bitLength() > 31 |==> w.bitLength() != 31
719:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:18069:w.bitLength() > 31 |==> w.bitLength() >= 31
720:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:18083:w.bitLength() > 31 |==> false
721:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):524:18336:denominator / d1 |==> denominator % d1
722:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):524:18336:denominator / d1 |==> denominator * d1
723:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):524:18336:denominator / d1 |==> denominator + d1
724:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):524:18336:denominator / d1 |==> denominator - d1
725:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):525:18376:fraction.denominator / d2 |==> fraction.denominator % d2
726:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):525:18376:fraction.denominator / d2 |==> fraction.denominator * d2
727:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):525:18376:fraction.denominator / d2 |==> fraction.denominator + d2
728:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):525:18376:fraction.denominator / d2 |==> fraction.denominator - d2
729:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):539:18952:fraction == null |==> false
730:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19070:0 |==> 1
731:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19070:0 |==> -1
732:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19057:numerator == 0 |==> numerator <= 0
733:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19057:numerator == 0 |==> numerator >= 0
734:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19067:numerator == 0 |==> false
735:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19097:0 |==> 1
736:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19097:0 |==> -1
737:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19075:fraction.numerator == 0 |==> fraction.numerator <= 0
738:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19075:fraction.numerator == 0 |==> fraction.numerator >= 0
739:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19094:fraction.numerator == 0 |==> false
740:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19057:numerator == 0 || fraction.numerator == 0 |==> numerator == 0 != (fraction.numerator == 0)
741:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19057:numerator == 0 || fraction.numerator == 0 |==> numerator == 0
742:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19075:numerator == 0 || fraction.numerator == 0 |==> fraction.numerator == 0
743:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):542:19072:numerator == 0 || fraction.numerator == 0 |==> true
744:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19447:numerator / d1 |==> numerator % d1
745:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19447:numerator / d1 |==> numerator * d1
746:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19447:numerator / d1 |==> numerator + d1
747:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19447:numerator / d1 |==> numerator - d1
748:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19461:fraction.numerator / d2 |==> fraction.numerator % d2
749:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19461:fraction.numerator / d2 |==> fraction.numerator * d2
750:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19461:fraction.numerator / d2 |==> fraction.numerator + d2
751:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):550:19461:fraction.numerator / d2 |==> fraction.numerator - d2
752:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19529:denominator / d2 |==> denominator % d2
753:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19529:denominator / d2 |==> denominator * d2
754:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19529:denominator / d2 |==> denominator + d2
755:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19529:denominator / d2 |==> denominator - d2
756:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19545:fraction.denominator / d1 |==> fraction.denominator % d1
757:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19545:fraction.denominator / d1 |==> fraction.denominator * d1
758:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19545:fraction.denominator / d1 |==> fraction.denominator + d1
759:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):551:19545:fraction.denominator / d1 |==> fraction.denominator - d1
760:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):560:19788:numerator * i |==> numerator % i
761:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):560:19788:numerator * i |==> numerator + i
762:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):560:19788:numerator * i |==> numerator - i
763:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):560:19788:numerator * i |==> numerator / i
764:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):574:20392:fraction == null |==> false
765:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):577:20519:0 |==> 1
766:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):577:20519:0 |==> -1
767:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):577:20497:fraction.numerator == 0 |==> fraction.numerator <= 0
768:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):577:20497:fraction.numerator == 0 |==> fraction.numerator >= 0
769:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):577:20516:fraction.numerator == 0 |==> false
770:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):590:20983:denominator * i |==> denominator % i
771:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):590:20983:denominator * i |==> denominator + i
772:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):590:20983:denominator * i |==> denominator - i
773:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):590:20983:denominator * i |==> denominator / i
774:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 |==> 0
775:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 |==> -100
776:AOR:*(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 * doubleValue() |==> 100 % doubleValue()
777:AOR:*(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 * doubleValue() |==> 100 + doubleValue()
778:AOR:*(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 * doubleValue() |==> 100 - doubleValue()
779:AOR:*(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():602:21321:100 * doubleValue() |==> 100 / doubleValue()
780:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):617:21974:0 |==> 1
781:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):617:21974:0 |==> -1
782:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):617:21959:denominator == 0 |==> denominator <= 0
783:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):617:21959:denominator == 0 |==> denominator >= 0
784:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):617:21971:denominator == 0 |==> false
785:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:22176:0 |==> 1
786:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:22176:0 |==> -1
787:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:22165:numerator == 0 |==> numerator <= 0
788:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:22165:numerator == 0 |==> numerator >= 0
789:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:22174:numerator == 0 |==> false
790:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22306:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
791:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22317:denominator == Integer.MIN_VALUE |==> false
792:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22351:1 |==> 0
793:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22351:1 |==> -1
794:LOR:&(int,int):^(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22341:numerator & 1 |==> numerator ^ 1
795:LOR:&(int,int):|(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22341:numerator & 1 |==> numerator | 1
796:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22355:0 |==> 1
797:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22355:0 |==> -1
798:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22340:(numerator & 1) == 0 |==> (numerator & 1) <= 0
799:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22340:(numerator & 1) == 0 |==> (numerator & 1) >= 0
800:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22353:(numerator & 1) == 0 |==> false
801:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22306:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE == ((numerator & 1) == 0)
802:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22337:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> false
803:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22306:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE
804:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:22340:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> (numerator & 1) == 0
805:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22383:2 |==> 0
806:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22383:2 |==> -2
807:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22372:numerator /= 2; |==> <NO-OP>
808:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22399:2 |==> 0
809:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22399:2 |==> -2
810:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):626:22386:denominator /= 2; |==> <NO-OP>
811:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):628:22438:0 |==> 1
812:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):628:22438:0 |==> -1
813:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):628:22424:denominator < 0 |==> denominator != 0
814:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):628:22424:denominator < 0 |==> denominator <= 0
815:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):628:22436:denominator < 0 |==> false
816:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:22459:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
817:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:22468:numerator == Integer.MIN_VALUE |==> false
818:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:22511:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
819:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:22522:denominator == Integer.MIN_VALUE |==> false
820:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:22459:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE != (denominator == Integer.MIN_VALUE)
821:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:22459:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE
822:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:22511:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> denominator == Integer.MIN_VALUE
823:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:22488:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> true
824:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):634:22747:-numerator |==> +numerator
825:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):634:22747:-numerator |==> ~numerator
826:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):634:22735:numerator = -numerator; |==> <NO-OP>
827:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):635:22785:-denominator |==> +denominator
828:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):635:22785:-denominator |==> ~denominator
829:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):635:22771:denominator = -denominator; |==> <NO-OP>
830:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):639:22910:numerator /= gcd; |==> <NO-OP>
831:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):640:22936:denominator /= gcd; |==> <NO-OP>
832:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@toString():656:23382:1 |==> 0
833:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@toString():656:23382:1 |==> -1
834:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():656:23367:denominator == 1 |==> denominator <= 1
835:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():656:23367:denominator == 1 |==> denominator >= 1
836:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():656:23379:denominator == 1 |==> false
837:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():657:23399:str = Integer.toString(numerator); |==> <NO-OP>
838:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@toString():658:23466:0 |==> 1
839:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@toString():658:23466:0 |==> -1
840:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():658:23453:numerator == 0 |==> numerator <= 0
841:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():658:23453:numerator == 0 |==> numerator >= 0
842:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():658:23463:numerator == 0 |==> false
843:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():659:23483:str = "0"; |==> <NO-OP>
844:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():661:23523:str = numerator + " / " + denominator; |==> <NO-OP>
